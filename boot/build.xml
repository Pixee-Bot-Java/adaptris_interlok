<project name="boot" xmlns:interlok="uri:interlok"  xmlns:ivy="antlib:org.apache.ivy.ant"  default="jar" basedir=".">

  <tstamp>
    <format property="today" pattern="yyyy-MM-dd" locale="en"/>
  </tstamp>

  <property file="build.properties"/>
  <property file="ivy.properties"/>
  <import file="${basedir}/../ivy/ant-ivy-includes.xml"/>

  <target name="init">
    <property name="project.name" value="interlok-boot"/>
    <property name="project.jar.name" value="${project.name}.jar"/>
    <property name="ivy.publish.bundle.type" value="jar"/>
    <property name="ivy.publish.revision" value="3.7-SNAPSHOT"/>
    <property name="ivy.dir" value="${basedir}/../ivy"/>
    <property name="ivy.xml.file" value="${ivy.dir}/ivy-boot.xml"/>
    <property name="ivy.artifact.publish.status" value="integration"/>

    <property name="manifest.title" value="Interlok Bootstrap"/>
    <property name="project.pom.description" value="Wrapper around spring-boot-loader using PropertyLauncher to bootrap Interlok"/>

    <property name="src.dir" value="${basedir}/src/main/java" />
    <property name="testsrc.dir"  value="${basedir}/src/test/java"/>
    <property name="build.dir" value="${basedir}/target" />
    <property name="build.classes.dir" value="${build.dir}/classes" />
    <property name="classes.build.dir" value="${build.classes.dir}" />
    <property name="project.dist.dir" value="${build.dir}/dist"/>
    <property name="testclasses.build.dir"  value="${build.dir}/testclasses"/>
    <property name="test.resources.dir"  value="${basedir}/src/test/resources"/>

    <property name="tests.output.dir"       value="${build.dir}/testoutput"/>
    <property name="html.tests.output.dir"  value="${tests.output.dir}/html"/>
    <property name="junit.forkmode"         value="once"/>
    <property name="junit.printsummary"     value="on"/>
    <property name="junit.test.classes"     value="**/*Test*.java" />

    <property name="resources.dir" value="${basedir}/src/main/resources"/>
    <property name="javac.target.version"   value="1.7"/>
    <property name="spring-boot-loader.version" value="1.5.7.RELEASE"/>
    <property name="spring-boot-loader.local" value="${build.dir}/spring-boot-loader.jar"/>
    <property name="spring-boot-loader.url" value="http://repo1.maven.org/maven2/org/springframework/boot/spring-boot-loader/${spring-boot-loader.version}/spring-boot-loader-${spring-boot-loader.version}.jar"/>

  </target>

  <target name="clean" depends="init" description="Clean up build artefacts">
    <delete dir="${build.dir}"/>
    <delete dir="${tests.output.dir}"/>
    <delete>
      <fileset file="${coverage.metadata.file}"/>
    </delete>
  </target>

  <target name="compile" depends="init, prepare-ivy, macrodef.init">
    <mkdir dir="${build.classes.dir}" />
    <javac destdir="${build.classes.dir}" srcdir="${src.dir}" debug="on" debuglevel="source,lines,vars"
           source="${javac.target.version}" target="${javac.target.version}" includeAntRuntime="true">
      <classpath refid="main.classpath" />
    </javac>
  </target>

  <target name="compile.tests" depends="compile">
    <mkdir dir="${testclasses.build.dir}" />
    <javac source="${javac.target.version}" target="${javac.target.version}" destdir="${testclasses.build.dir}" srcdir="${testsrc.dir}"
      debug="on" debuglevel="source,lines,vars" includeAntRuntime="true">
      <classpath id="classpath.compiletests">
        <pathelement path="${build.classes.dir}"/>
        <path refid="main.classpath"/>
      </classpath>
    </javac>
  </target>

  <target name="jar" depends="compile">
    <mkdir dir="${build.classes.dir}"/>
    <manifest file="${build.dir}/Manifest.mf">
      <attribute name="Manifest-Version" value="1.0"/>
      <attribute name="Main-Class" value="com.adaptris.interlok.boot.InterlokLauncher"/>
      <attribute name="Build-Version" value="${ivy.publish.revision}"/>
      <attribute name="Built-By" value="${user.name}"/>
    </manifest>
  	<get src="${spring-boot-loader.url}" dest="${spring-boot-loader.local}" usetimestamp="true"/>
    <unzip dest="${build.classes.dir}" src="${spring-boot-loader.local}"/>
    <delete>
      <fileset dir="${build.classes.dir}">
        <include name="**/MANIFEST.MF"/>
      </fileset>
    </delete>
    <copy file="${resources.dir}/loader.properties" tofile="${build.classes.dir}/loader.properties" verbose="true"/>
    <interlok:create-version dir="${build.classes.dir}/META-INF" name="${manifest.title}"/>
    <jar jarfile="${project.dist.dir}/${project.jar.name}" manifest="${build.dir}/Manifest.mf">
      <fileset dir="${build.classes.dir}"/>
    </jar>
  </target>

  <target name="macrodef.init" depends="ivy.macrodef"/>

  <target name="prepare-for-publish" depends="prepare-ivy, macrodef.init, jar, run-tests">
    <mkdir dir="${project.dist.dir}/${project.name}/pom"/>
    <mkdir dir="${project.dist.dir}/${project.name}/jar"/>
    <copy todir="${project.dist.dir}/${project.name}/jar" file="${project.dist.dir}/${project.jar.name}"/>
    <jar jarfile="${project.dist.dir}/${project.name}/source/${project.name}.jar">
      <fileset dir="${src.dir}"/>
      <zipfileset dir="${basedir}/.." prefix="META-INF">
        <include name="LICENSE"/>
      </zipfileset>
    </jar>
    <ivy:makepom ivyfile="${ivy.xml.file}" pomfile="${project.dist.dir}/${project.name}/pom/${project.name}.pom" description="${project.pom.description}"  conf="default,master,compile,provided,runtime,test,system,sources,javadoc,optional"/>
  </target>

  <target name="publish" depends="prepare-for-publish">
    <interlok:publish-artifact resolver="${ivy.repo}" revision="${ivy.publish.revision}" artifact.basedir="${project.dist.dir}" ivy-config="${ivy.xml.file}"/>
  </target>

  <target name="test" depends="run-tests" description="run tests">
    <interlok:test-reports basedir="${tests.output.dir}" reportdir="${html.tests.output.dir}"/>
    <fail message="JUNIT tests failed, check output in ${tests.output.dir}" if="junit.failed"/>
  </target>

  <target name="run-tests" depends="compile.tests">
    <mkdir dir="${tests.output.dir}"/>
    <mkdir dir="${test.resources.dir}"/>
    <mkdir dir="${project.dist.dir}"/>
    <interlok:execute-tests printsummary="${junit.printsummary}" fork="yes" showoutput="no" forkmode="${junit.forkmode}"/>
  </target>

  <target name="test-no-reports" depends="run-tests" description="Run Tests with No reports">
    <fail message="JUNIT tests failed, check output in ${tests.output.dir}" if="junit.failed"/>
  </target>
</project>
